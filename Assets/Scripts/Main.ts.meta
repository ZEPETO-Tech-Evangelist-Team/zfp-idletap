fileFormatVersion: 2
guid: b86714331baa15243a49032e33da552f
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    ZEPETO_Multiplay_1 = require(\"ZEPETO.Multiplay\");\r\nconst ZEPETO_Script_1
    = require(\"ZEPETO.Script\");\r\nconst UIManager_1 = require(\"./UIManager\");\r\nclass
    Main extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    Start() {\r\n       
    this._currentPlayers = new Map();\r\n        this.UIManager = this.UIManagerGameObject.GetComponent($typeof(UIManager_1.default));\r\n       
    this.multiplayReference.add_RoomJoined((room) => {\r\n            // Make reference
    to room\r\n            this._roomReference = room;\r\n            this._roomReference.add_OnStateChange(this.OnStateChange.bind(this));\r\n           
    // Add server message listener type by \"attack\"\r\n            room.AddMessageHandler(\"SERVER_ATTACK_MESSAGE\",
    (message) => {\r\n                // Execute server message\r\n               
    this.Attack(message.attackAmount);\r\n                this.UIManager.UserInfoPanels.get(message.ownerUserId).UpdateCurrentAttacks(message.attackAmount);\r\n               
    this.UIManager.UserInfoPanels.get(message.ownerUserId).UpdateLifetimeAttacks(message.lifetimeAttacks);\r\n           
    });\r\n        });\r\n    }\r\n    //Attacks\r\n    SendAttackMessageToServer()
    {\r\n        let damageAmount = 1;\r\n        this._roomReference.Send(\"CLIENT_ATTACK_MESSAGE\",
    damageAmount);\r\n    }\r\n    Attack(attackAmount) {\r\n        let height =
    this.enemyGameObject.transform.localScale.y;\r\n        this.enemyGameObject.transform.localScale
    = new UnityEngine_1.Vector3(4, height - attackAmount, 4);\r\n        if (this.enemyGameObject.transform.localScale.y
    === 0) {\r\n            this.enemyGameObject.transform.localScale = new UnityEngine_1.Vector3(4,
    15, 4);\r\n        }\r\n    }\r\n    /** multiplayer Spawn **/\r\n    OnStateChange(state,
    isFirst) {\r\n        const join = new Map();\r\n        const leave = new Map(this._currentPlayers);\r\n       
    state.schemaPlayers.ForEach((userId, player) => {\r\n            if (!this._currentPlayers.has(userId))
    {\r\n                this._currentPlayers.set(userId, player);\r\n               
    join.set(userId, player);\r\n            }\r\n            leave.delete(userId);\r\n       
    });\r\n        // [RoomState] Create a player instance for players that enter
    the Room\r\n        join.forEach((schemaPlayer, userId) => this.OnJoinPlayer(userId,
    schemaPlayer));\r\n        // [RoomState] Remove the player instance for players
    that exit the room\r\n        leave.forEach((schemaPlayer, userId) => this.OnLeavePlayer(userId,
    schemaPlayer));\r\n    }\r\n    OnJoinPlayer(userId, schemaPlayer) {\r\n       
    this.UIManager.AddUserInfoPanel(userId);\r\n    }\r\n    OnLeavePlayer(userId,
    schemaPlayer) {\r\n        this._currentPlayers.delete(userId);\r\n        this.UIManager.RemoveUserInfoPanel(userId);\r\n   
    }\r\n}\r\nexports.default = Main;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIk1haW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw2Q0FBeUQ7QUFDekQsdURBQXdDO0FBRXhDLGlEQUFxRDtBQUVyRCwyQ0FBb0M7QUFRcEMsTUFBcUIsSUFBSyxTQUFRLHFDQUFxQjtJQVluRCxLQUFLO1FBRUQsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLEdBQUcsRUFBd0IsQ0FBQztRQUN2RCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxZQUFZLFNBQUMsbUJBQVMsRUFBRyxDQUFDO1FBQ3BFLElBQUksQ0FBQyxrQkFBa0IsZ0JBQWUsQ0FBQyxJQUFVLEVBQUUsRUFBRTtZQUNqRCx5QkFBeUI7WUFDekIsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7WUFFM0IsSUFBSSxDQUFDLGNBQWMsbUJBQWtCLElBQUksQ0FBQyxhQUFhLGFBQUM7WUFFeEQsK0NBQStDO1lBQy9DLElBQUksQ0FBQyxpQkFBaUIsQ0FBYSx1QkFBdUIsRUFBRSxDQUFDLE9BQW1CLEVBQUUsRUFBRTtnQkFDaEYseUJBQXlCO2dCQUN6QixJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQztnQkFDbEMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7Z0JBQ2xHLElBQUksQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUMscUJBQXFCLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1lBQzFHLENBQUMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQyxFQUFDO0lBQ04sQ0FBQztJQUVELFNBQVM7SUFDRix5QkFBeUI7UUFDNUIsSUFBSSxZQUFZLEdBQVcsQ0FBQyxDQUFDO1FBQzdCLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLHVCQUF1QixFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3BFLENBQUM7SUFFTSxNQUFNLENBQUMsWUFBb0I7UUFDOUIsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztRQUN6RCxJQUFJLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEdBQUcsSUFBSSxxQkFBTyxDQUFDLENBQUMsRUFBRSxNQUFNLEdBQUcsWUFBWSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBRXJGLElBQUksSUFBSSxDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDbkQsSUFBSSxDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUMsVUFBVSxHQUFHLElBQUkscUJBQU8sQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQ3JFO0lBQ0wsQ0FBQztJQUVELHlCQUF5QjtJQUNqQixhQUFhLENBQUMsS0FBWSxFQUFFLE9BQWdCO1FBQ2hELE1BQU0sSUFBSSxHQUFHLElBQUksR0FBRyxFQUF3QixDQUFDO1FBQzdDLE1BQU0sS0FBSyxHQUFHLElBQUksR0FBRyxDQUF1QixJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7UUFFbEUsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFjLEVBQUUsTUFBb0IsRUFBRSxFQUFFO1lBQ2pFLElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRTtnQkFDbkMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO2dCQUN6QyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQzthQUM1QjtZQUNELEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDekIsQ0FBQyxDQUFDLENBQUM7UUFFSCx1RUFBdUU7UUFDdkUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLFlBQTBCLEVBQUUsTUFBYyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDO1FBRXRHLHdFQUF3RTtRQUN4RSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsWUFBMEIsRUFBRSxNQUFjLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUM7SUFDNUcsQ0FBQztJQUVPLFlBQVksQ0FBQyxNQUFlLEVBQUUsWUFBMkI7UUFDN0QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBRU8sYUFBYSxDQUFDLE1BQWUsRUFBRSxZQUEyQjtRQUM5RCxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNwQyxJQUFJLENBQUMsU0FBUyxDQUFDLG1CQUFtQixDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQy9DLENBQUM7Q0FDSjtBQTNFRCx1QkEyRUMifQ==","assetPath":"Assets/Scripts/Main.ts","manifest":{"properties":[{"assembly":"UnityEngine.CoreModule","name":"UIManagerGameObject","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"","name":"UIManager","type":"C:/Users/mondu/OneDrive/Documents/zfp-idletap/Assets/Scripts/UIManager.default","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"ZEPETO.World","name":"multiplayReference","type":"ZEPETO.World.ZepetoWorldMultiplay","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"enemyGameObject","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"Main","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: 57188c3a29846d4345b6cd5dd23a56be
  onlyWriteTrigger: 0
